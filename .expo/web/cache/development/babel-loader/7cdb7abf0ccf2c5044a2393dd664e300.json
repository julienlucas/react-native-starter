{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Julien/Desktop/MoviesAndMe/components/Search.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FilmItem from \"../components/FilmItem\";\nimport { getFilmsFormApiWithSearchedText } from \"../api/TMDBApi\";\nimport SafeAreaView from 'react-native-safe-area-view';\n\nfunction Search() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      films = _useState2[0],\n      setFilms = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchedText = _useState4[0],\n      setSearchedText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      totalPages = _useState10[0],\n      setTotalPages = _useState10[1];\n\n  var loadFilms = function loadFilms() {\n    setIsLoading(true);\n\n    if (searchedText.length > 0) {\n      getFilmsFormApiWithSearchedText(searchedText, page + 1).then(function (data) {\n        setPage(data.page);\n        setTotalPages(data.total_pages);\n        setFilms([].concat(_toConsumableArray(films), _toConsumableArray(data.results)));\n        setIsLoading(false);\n        console.log(\"Page : \" + page + \" / TotalPages : \" + totalPages + \" / Nombre de films : \" + films.length);\n      });\n    }\n  };\n\n  var displayLoading = function displayLoading() {\n    if (isLoading) {\n      return React.createElement(View, {\n        style: styles.loading_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }));\n    }\n  };\n\n  var searchTextInputChanged = function searchTextInputChanged(text) {\n    setSearchedText(text);\n  };\n\n  var searchFilms = function searchFilms() {\n    setPage(0);\n    setTotalPages(0);\n    setFilms([]);\n    loadFilms();\n  };\n\n  return React.createElement(View, {\n    style: styles.main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onSubmitEditing: function onSubmitEditing() {\n      return searchFilms();\n    },\n    onChangeText: function onChangeText(text) {\n      return searchTextInputChanged(text);\n    },\n    style: styles.textinput,\n    placeholder: \"Titre du film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Rechercher\",\n    onPress: function onPress() {\n      return searchFilms();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: films,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(FilmItem, {\n        film: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }\n      });\n    },\n    onEndReachedThreshold: .5,\n    onEndReached: function onEndReached() {\n      if (page < totalPages) {\n        loadFilms();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), displayLoading());\n}\n\nvar styles = StyleSheet.create({\n  main_container: {\n    marginTop: 20,\n    flex: 1\n  },\n  textinput: {\n    marginLeft: 5,\n    marginRight: 5,\n    height: 50,\n    borderColor: '#000000',\n    borderWidth: 1,\n    paddingLeft: 5\n  },\n  loading_container: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 100,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Search;","map":{"version":3,"sources":["/Users/Julien/Desktop/MoviesAndMe/components/Search.js"],"names":["React","useState","FilmItem","getFilmsFormApiWithSearchedText","SafeAreaView","Search","films","setFilms","searchedText","setSearchedText","isLoading","setIsLoading","page","setPage","totalPages","setTotalPages","loadFilms","length","then","data","total_pages","results","console","log","displayLoading","styles","loading_container","searchTextInputChanged","text","searchFilms","main_container","textinput","item","id","toString","StyleSheet","create","marginTop","flex","marginLeft","marginRight","height","borderColor","borderWidth","paddingLeft","position","left","right","top","bottom","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, View, TextInput, FlatList, Button, ActivityIndicator } from 'react-native'\nimport FilmItem from '../components/FilmItem'\nimport { getFilmsFormApiWithSearchedText } from '../api/TMDBApi'\nimport SafeAreaView from 'react-native-safe-area-view'\n\nfunction Search() {\n    const [films, setFilms] = useState([])\n    const [searchedText, setSearchedText] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [page, setPage] = useState(0)\n    const [totalPages, setTotalPages] = useState(0)\n\n    const loadFilms = () => {\n        setIsLoading(true)\n        if (searchedText.length > 0) {\n          getFilmsFormApiWithSearchedText(searchedText, page+1).then(data => {\n              setPage(data.page)\n              setTotalPages(data.total_pages)\n              setFilms([...films, ...data.results])\n              setIsLoading(false)\n              console.log(\"Page : \" + page + \" / TotalPages : \" + totalPages + \" / Nombre de films : \" + films.length)\n          })\n        }\n    }\n\n    const displayLoading = () => {\n        if (isLoading) {\n            return (\n                <View style={styles.loading_container}>\n                  <ActivityIndicator size='large' />\n                </View>\n              )\n        }\n    }\n\n    const searchTextInputChanged = text => {\n        setSearchedText(text)\n    }\n\n    const searchFilms = () => {\n        setPage(0)\n        setTotalPages(0)\n        setFilms([])\n        loadFilms()\n    }\n\n    return (\n        <View style={styles.main_container}>\n            <TextInput\n                onSubmitEditing={() => searchFilms()}\n                onChangeText={(text) => searchTextInputChanged(text)}\n                style={styles.textinput}\n                placeholder='Titre du film'/>\n            <Button title='Rechercher' onPress={() => searchFilms()}/>\n            <FlatList\n                data={films}\n                keyExtractor={(item) => item.id.toString()}\n                renderItem={({item}) => <FilmItem film={item}/>}\n                onEndReachedThreshold={.5}\n                onEndReached={() => {\n                    if (page < totalPages) {\n                        loadFilms()\n                    }\n                }}\n            />\n            {displayLoading()}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    main_container: {\n      marginTop: 20,\n      flex: 1\n    },\n    textinput: {\n      marginLeft: 5,\n      marginRight: 5,\n      height: 50,\n      borderColor: '#000000',\n      borderWidth: 1,\n      paddingLeft: 5\n    },\n    loading_container: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 100,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n })\n\nexport default Search"]},"metadata":{},"sourceType":"module"}